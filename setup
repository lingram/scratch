#!/bin/sh

# Copyright (c) 2011 Altera Corporation. All rights reserved.

# Your use of Altera Corporation's design tools, logic functions and other
# software and tools, and its AMPP partner logic functions, and any output files
# any of the foregoing (including device programming or simulation files), and
# any associated documentation or information are expressly subject to the terms
# and conditions of the Altera Program License Subscription Agreement, Altera
# MegaCore Function License Agreement, or other applicable license agreement,
# including, without limitation, that your use is for the sole purpose of
# programming logic devices manufactured by Altera and sold by Altera or its
# authorized distributors.  Please refer to the applicable agreement for
# further details.

script_path=`dirname $0`

if [ -z $script_path ] ;then
	script_path=`which $0`
fi

if [ $script_path = "." -o $script_path = "" ] ;then
	script_path=`pwd`
fi

if [ $(printf '%s' "$script_path" | cut -c 1) != "/" ] ; then
	script_path=`pwd`/$script_path
fi

# Check if we are running on a supported version of Linux distribution with pre-requisite packages installed.
# Both RedHat and CentOS have the /etc/redhat-release file.
unsupported_os=0
is_rhel_or_centos=0
missing_package=0

if [ -f /etc/redhat-release ] ;then
	os_version=`cat /etc/redhat-release | grep release | sed -e 's/ (.*//g'`
	os_platform=`echo ${os_version} | grep "Red Hat Enterprise" || echo ${os_version} | grep "CentOS"`

	if [ "$os_platform" != "" ] ;then

		is_rhel_or_centos=1
		os_rev=`echo ${os_version} | grep "release 3" || echo ${os_version} | grep "release 4"`
		if [ "$os_rev" != "" ] ;then
			unsupported_os=1
		fi
	fi
elif [ -f /etc/SuSE-release ] ;then
	os_version=`cat /etc/SuSE-release`
	os_platform=`echo ${os_version} | grep SUSE`
	if [ "$os_platform" != "" ] ;then
		os_rev=`echo ${os_version} | grep "VERSION = 10"`
		if [ "$os_rev" != "" ] ;then
			os_version=`cat /etc/SuSE-release | tr "\n" ' '| sed -e 's/ VERSION.*//g'`
			unsupported_os=1
		fi
	fi
fi

if [ $unsupported_os -eq 1 ] ;then
	echo ""
	echo "Altera software is not supported on the $os_version operating system. Refer to the Operating System Support page of the Altera website for complete operating system support information."
	echo ""
	exit
elif [ $is_rhel_or_centos -eq 1 ] ;then
	for item in glibc libXext libX11 libXau libXdmcp freetype fontconfig expat
	do
		if test -z `rpm -q $item --qf "%{n}-%{arch}\n"| grep "i386\|i486\|i586\|i686"` ; then
			if [ $missing_package -eq 0 ] ;then
				missing_package=1
				echo ""
				echo "You must install the 32-bit version of the following libraries for the Altera Installer to operate properly:"
				echo "> $item"
			else
				echo "> $item"
			fi
		fi
	done	
fi

if [ $missing_package -eq 1 ] ;then
	answer=1 
	while [ "$answer" = 1 ]  
	do
		echo ""
		echo "You can install these libraries with the RPM utility on Red Hat Linux Enterprise systems or with the yum utility on CentOS systems. Refer to the Altera Software Installation and Licensing Manual for any additional libraries required by Altera Software."
		echo ""
		echo "If you proceed with the installation your software may not function correctly."
		echo ""
		echo -n "Do you want to continue to install the software? (y/n): "
		read answer

		if [ "$answer" = "n" ] ;then
			exit
		fi

		if [ "$answer" = "y" ] ;then
			answer=0
		fi
	done


fi

export ROOTDIR=$script_path
export CMD_NAME=`basename $0`

if test $CMD_NAME = "setup" ; then
	export CMD_NAME="altera_installer_cmd --source=$ROOTDIR"

	LOG="$(mktemp /tmp/altera_setup.log.XXXXXXXXXX)"

	# no args; default to GUI install based on root directory type
	if [ -z $1 ]; then
		_setup_args="--dvd"
		if [ -f $ROOTDIR/.setup_args ]; then :
			_setup_args=`cat $ROOTDIR/.setup_args`
			_setup_args=`echo -n $_setup_args | tr -d '\r\n'`
		fi

		export CMD_NAME="$CMD_NAME $_setup_args"

		echo "Welcome to Altera Software Installer"
		echo "Copyright (c) Altera Corporation 2012"
		echo ""
		echo "Starting GUI. If nothing shows up, or you don't have an X display, run:"
		echo "   ./setup --help "
		echo "for commandline usage."
		echo "NOTE: All output has been redirected to $LOG"
		echo ""
	fi

	export LD_LIBRARY_PATH=$ROOTDIR/altera_installer/bin:$LD_LIBRARY_PATH
	export PATH=$ROOTDIR/altera_installer/bin:$PATH

	if [ -z $1 ]; then
		eval exec "$CMD_NAME $@ &> $LOG"
	else
		eval exec "$CMD_NAME $@"
	fi
elif test $CMD_NAME = "autorun.sh" ; then
	export CMD_NAME="autorun"
	export LD_LIBRARY_PATH=$ROOTDIR/autorun:$LD_LIBRARY_PATH
	export PATH=$ROOTDIR/autorun:$PATH

	LOG="$(mktemp /tmp/altera_dvd_autorun.log.XXXXXXXXXX)"

	eval exec "$CMD_NAME $@ &> $LOG"
fi
